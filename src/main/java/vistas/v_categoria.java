/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import modelo.conexion;

/**
 *
 * @author Admin
 */
public class v_categoria extends javax.swing.JInternalFrame implements miInterface {

    private tableController tc;
private Map<String, String> myData;
conexion con = null;
String currentField;
javax.swing.JTextField idObj;
private String msg;

    /**
     * Creates new form v_cargo
     */
    public v_categoria() {
        initComponents();
        
        currentField = "";

        //tf_id.addActionListener(null);
        //tf_id.setVisible(false);
        tc = new tableController();
        tc.init("categoria");
        myData = new HashMap<String, String>();
        //this.tf_id.addKeyListener(escucha);
//        this.tf_id.addKeyListener(new KeyAdapter(){
//            public void keyPressed(KeyEvent e){
//                System.out.println(e.getKeyCode());
//                if(e.getKeyCode() == 13){
//                    System.out.println("enter ");
//                }
//            }
//        });
    }
    private void setData(){
        myData.put("id_categoria",tf_cat.getText());
        myData.put("descripcion",tf_descripcion.getText() );
    }
    private void resetData(){
        myData.put("id_categoria","0");
        myData.put("descripcion","");
    }
       
    private void fillView(Map<String, String> data){
        for(Map.Entry<String, String> entry : data.entrySet()){
            String key = entry.getKey();
            String value = entry.getValue();
            switch(key){
                case"id_categoria":
                    tf_cat.setText(value);
                    break;
                case "descripcion":
                    tf_descripcion.setText(value);
                    break;
            }//end swich
        }//end for
    }//end fillView
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tf_cat = new javax.swing.JTextField();
        tf_descripcion = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("ABM Categoria");

        jLabel1.setText("ID CATEGORIA");

        jLabel2.setText("DESCRIPCION");

        tf_cat.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_catFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_catFocusLost(evt);
            }
        });
        tf_cat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_catActionPerformed(evt);
            }
        });
        tf_cat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_catKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tf_cat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_descripcion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tf_cat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(218, 218, 218))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tf_catFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_catFocusGained
        // TODO add your handling code here:
        this.currentField = "id_cat";
        this.tf_cat.selectAll();
    }//GEN-LAST:event_tf_catFocusGained

    private void tf_catFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_catFocusLost
        // TODO add your handling code here:
        this.currentField = "id_cat";
    }//GEN-LAST:event_tf_catFocusLost

    private void tf_catActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_catActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_catActionPerformed

    private void tf_catKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_catKeyTyped

        if (evt.getKeyChar()=='\n') {
            this.imBuscar();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_catKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField tf_cat;
    private javax.swing.JTextField tf_descripcion;
    // End of variables declaration//GEN-END:variables

    @Override
    public int imModo() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void imGrabar() {
        int id, rows = 0;
        id = Integer.parseInt(tf_cat.getText());
        if(id>0){
            this.imActualizar();
            return;
            
        }
        this.setData();
        rows = this.tc.createReg(this.myData);
        this.fillView(myData);
    }

    @Override
    public void imActualizar() {

        System.out.println("V imActualizar");
        this.setData();
        int rows = this.tc.updateReg(myData);
        this.resetData();
        this.fillView(myData);
    }

    @Override
    public void imBorrar() {

        this.setData();
        int rows = this.tc.deleteReg(tf_cat.getText());
        if(rows<=0){
            msg = "No se ha podido eliminar el registro: "+tf_cat.getText();
            System.out.println(msg);
            JOptionPane.showMessageDialog(this, msg, "¡Atencion...!", JOptionPane.OK_OPTION);
            
            
        }
        if (rows>0){
            msg = "EL registro: "+tf_cat.getText()+" se ha eliminado correctamente";
            System.out.println(msg);
            JOptionPane.showMessageDialog(this, msg, "¡Atención...!", JOptionPane.YES_OPTION);
        }
        this.resetData();
        this.fillView(myData);
    }

    @Override
    public void imNuevo() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void imBuscar() {
        this.setData();
        //Aqui podriamos verificar que tfid no sea cero
        this.myData = this.tc.searchById(this.myData);
        //también aqui se podría verificar que traiga los datos, sino invocar resteData  antes del fill
        this.fillView(myData);
             
    }

    @Override
    public void imPrimero() {
        this.setData();
        //en este caso el id no importa, pero se pasa para tener unificado el formato
        this.myData = this.tc.navegationReg(tf_cat.getText(),"FIRST");
        this.fillView(this.myData);
    }

    @Override
    public void imSiguiente() {
        this.setData();
        //en este caso el id SI importa
        this.myData = this.tc.navegationReg(tf_cat.getText(),"NEXT");
        this.fillView(this.myData);
    }

    @Override
    public void imAnterior() {
        this.setData();
        //en este caso el id SI importa
        this.myData = this.tc.navegationReg(tf_cat.getText(),"PRIOR");
        this.fillView(this.myData);
    }

    @Override
    public void imUltimo() {
        this.setData();
        //en este caso el id no importa, pero se pasa para tener unificado el formato
        this.myData = this.tc.navegationReg(tf_cat.getText(),"LAST");
        this.fillView(this.myData);
    }

    @Override
    public void imImprimir() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void imInsDet() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void imDelDet() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void imCerrar() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public int imBuscarUsuClave() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void imFiltrar() {

       String sql;
        sql = "";
        w_buscar frame;
        if (this.currentField.equals("")){
            return;
        }
        switch(this.currentField){
            case "id_categoria":
                sql = "SELECT id_categoria AS codigo, descripcion " +
                        "FROM categoria "+
                        "WHERE descripcion LIKE '%";
                this.idObj = tf_cat;
                break;
        }
        frame = new w_buscar (sql, this.idObj);
        frame.setVisible(true);
        VentanaPrincipal.desktop.add(frame);
        try {
            frame.setSelected(true);
            
        }catch (Exception ex){
JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.OK_OPTION);        }
    }
    
    @Override
    public boolean imAbierto() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void imAbrir() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void imConect(conexion coneccion) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
}
